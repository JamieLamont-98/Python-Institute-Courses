Estimated time
15-30 minutes

Level of difficulty
Easy

Objectives
improving the student's skills in operating with strings;
encouraging the student to look for non-obvious solutions.
Scenario
Do you know what a palindrome is?

It's a word which look the same when read forward and backward. For example, "kayak" is a palindrome, while "loyal" is not.

Your task is to write a program which:

asks the user for some text;
checks whether the entered text is a palindrome, and prints result.
Note:

assume that an empty string isn't a palindrome;
treat upper- and lower-case letters as equal;
spaces are not taken into account during the check - treat them as non-existent;
there are more than a few correct solutions - try to find more than one.
Test your code using the data we've provided.

Test data
Sample input:

Ten animals I slam in a net

Sample output:

It's a palindrome


Sample input:

Eleven animals I slam in a net

Sample output:

It's not a palindrome


















def palindrome_checker():
    text = input("Enter a palindrome: ")
    
    if not text:
        print("Not a palindrome")
        return
    
    
    processed_text = ""
    
    for char in text:
        if char.isalnum():
            processed_text += char.lower()
    
    if processed_text == processed_text[::-1]:
        print(text,"is a palindrome.")
    
    else:
        print(text,"is not a palindrome.")


palindrome_checker()










def palindrome_checker_string_methods():
    text = input("Enter some text: ")
    
    if not text:
        print("Not a palindrome.")
        return
    
    # Remove spaces and convert to lowercase.
    cleaned_text = "".join(char for char in text if char.isalnum()).lower()
    
    if cleaned_text ==  cleaned_text[::-1]:
        print(text,"is a palindrome.")
        
    else:
        print(text,"is not a palindrome")

palindrome_checker_string_methods()











def palindrome_checker_two_pointers():
    text = input("Enter some text: ")

    if not text:
        print("Not a palindrome.")
        return

    # Clean the text: keep only alphanumeric characters and convert to lowercase
    cleaned_text = "".join(char for char in text if char.isalnum()).lower()

    left = 0
    right = len(cleaned_text) - 1

    while left < right:
        if cleaned_text[left] != cleaned_text[right]:
            print(f"'{text}' is not a palindrome.")
            return # Not a palindrome, so exit
        left += 1
        right -= 1

    print(f"'{text}' is a palindrome.")

# Example usage:
# palindrome_checker_two_pointers()






import re

def palindrome_checker_regex():
    text = input("Enter some text: ")

    if not text:
        print("Not a palindrome.")
        return

    # Use a regex to keep only alphanumeric characters and convert to lowercase
    # \W matches any non-alphanumeric character (equivalent to [^a-zA-Z0-9_])
    # The underscore is included by \w, so \W includes spaces and punctuation
    cleaned_text = re.sub(r'[^a-zA-Z0-9]', '', text).lower()


    if cleaned_text == cleaned_text[::-1]:
        print(f"'{text}' is a palindrome.")
    else:
        print(f"'{text}' is not a palindrome.")

# Example usage:
palindrome_checker_regex()
